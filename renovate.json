{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:recommended",
    "group:recommended",
    "group:monorepos",
    "workarounds:all"
  ],
  "baseBranches": ["dev"],
  "timezone": "Europe/Amsterdam",
  "schedule": ["before 6am on Monday"],
  "prCreation": "not-pending",
  "rebaseWhen": "conflicted",
  "stopUpdatingLabel": "renovate-pause",
  "labels": ["dependencies"],
  "assignees": ["retran"],
  "packageRules": [
    {
      "description": "Separate major and combine minor/patch",
      "matchUpdateTypes": ["major"]
    },
    {
      "description": "Combine minor/patch",
      "matchUpdateTypes": ["minor", "patch"],
      "groupName": "all minor and patch updates"
    },
    {
      "description": "Presets for all packages",
      "matchPackagePatterns": ["*"],
      "extends": [
        ":dependencyDashboard",
        ":semanticCommits",
        ":prHourlyLimit2",
        ":prConcurrentLimit10",
        ":ignoreModulesAndTests"
      ]
    },
    {
      "description": "Backend (Go) dependencies",
      "matchManagers": ["gomod"],
      "groupName": "backend dependencies",
      "schedule": ["before 6am on Monday"],
      "semanticCommitType": "build",
      "semanticCommitScope": "backend"
    },
    {
      "description": "Frontend dependencies (non-major)",
      "matchManagers": ["npm"],
      "matchUpdateTypes": ["minor", "patch"],
      "groupName": "frontend dependencies",
      "schedule": ["before 6am on Monday"],
      "semanticCommitType": "build",
      "semanticCommitScope": "frontend"
    },
    {
      "description": "Frontend major updates (separate PRs)",
      "matchManagers": ["npm"],
      "matchUpdateTypes": ["major"],
      "groupName": "frontend major updates",
      "schedule": ["before 6am on the first day of the month"],
      "semanticCommitType": "build",
      "semanticCommitScope": "frontend"
    },
    {
      "description": "React ecosystem",
      "matchPackagePatterns": ["^react", "^@types/react"],
      "groupName": "react monorepo",
      "schedule": ["before 6am on Monday"]
    },
    {
      "description": "Refine ecosystem",
      "matchPackagePatterns": ["^@refinedev/"],
      "groupName": "refine monorepo",
      "schedule": ["before 6am on Monday"]
    },
    {
      "description": "Radix UI ecosystem",
      "matchPackagePatterns": ["^@radix-ui/"],
      "groupName": "radix-ui monorepo",
      "schedule": ["before 6am on Monday"]
    },
    {
      "description": "Tailwind CSS ecosystem",
      "matchPackagePatterns": ["^@tailwindcss/", "^tailwind"],
      "groupName": "tailwindcss monorepo",
      "schedule": ["before 6am on Monday"]
    },
    {
      "description": "TypeScript and ESLint tooling",
      "matchPackagePatterns": [
        "^typescript",
        "^@typescript-eslint/",
        "^eslint",
        "^@eslint/"
      ],
      "groupName": "typescript and linting",
      "schedule": ["before 6am on Monday"]
    },
    {
      "description": "DevTools and build tools (e.g. Vite/Prettier)",
      "matchDepTypes": ["devDependencies"],
      "matchPackagePatterns": ["^vite", "^prettier", "^@vitejs/"],
      "groupName": "dev tools",
      "schedule": ["before 6am on Monday"]
    },
    {
      "description": "Database migrations tooling",
      "matchFileNames": ["postgres/**"],
      "groupName": "postgres tooling",
      "schedule": ["before 6am on Monday"],
      "semanticCommitType": "build",
      "semanticCommitScope": "postgres"
    },
    {
      "description": "Docker images",
      "matchDatasources": ["docker"],
      "groupName": "docker images",
      "schedule": ["before 6am on Monday"],
      "semanticCommitType": "build",
      "semanticCommitScope": "docker"
    },
    {
      "description": "Pin GitHub Actions to digest",
      "matchManagers": ["github-actions"],
      "pinDigests": true,
      "groupName": "github actions",
      "schedule": ["before 6am on Monday"],
      "semanticCommitType": "ci"
    },
    {
      "description": "Go version in go.mod (Disabled by default)",
      "matchManagers": ["gomod"],
      "matchDepTypes": ["golang"],
      "enabled": false,
      "commitMessagePrefix": "build(backend):"
    },
    {
      "description": "High Severity Security updates - immediate",
      "matchDatasources": ["go", "npm", "osv"],
      "vulnerabilityAlerts": {
        "enabled": true
      },
      "groupName": "high security updates",
      "schedule": ["at any time"],
      "automerge": false,
      "labels": ["security", "dependencies"],
      "matchUpdateTypes": ["patch", "minor", "major"],
      "matchCurrentVersion": "!/^0/"
    }
  ],
  "vulnerabilityAlerts": {
    "labels": ["security", "dependencies"],
    "assignees": ["retran"],
    "baseBranches": ["dev"],
    "enabled": true
  },
  "customManagers": [
    {
      "customType": "regex",
      "description": "Update Golang version in Dockerfile.dev",
      "fileMatch": ["(^|/)Dockerfile.dev$"],
      "matchStrings": ["FROM golang:(?<currentValue>.*?)-alpine"],
      "depNameTemplate": "golang",
      "datasourceTemplate": "docker",
      "versioningTemplate": "docker"
    },
    {
      "customType": "regex",
      "description": "Update Node version in Dockerfile.dev",
      "fileMatch": ["(^|/)Dockerfile.dev$"],
      "matchStrings": ["FROM node:(?<currentValue>.*?)-alpine"],
      "depNameTemplate": "node",
      "datasourceTemplate": "docker",
      "versioningTemplate": "docker"
    },
    {
      "customType": "regex",
      "description": "Update PostgreSQL version in docker-compose",
      "fileMatch": ["(^|/)docker-compose.*\\.ya?ml$"],
      "matchStrings": ["image: postgres:(?<currentValue>.*?)-alpine"],
      "depNameTemplate": "postgres",
      "datasourceTemplate": "docker",
      "versioningTemplate": "docker"
    }
  ]
}
