# Copyright 2025 Andrew Vasilyev
# SPDX-License-Identifier: APACHE-2.0

services:
  postgres:
    image: postgres:18-alpine3.22
    restart: always
    env_file: .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  temporal:
    image: temporalio/auto-setup:latest
    restart: always
    ports:
      - "7233:7233"
      - "8088:8088"
    env_file: .env
    environment:
      - DB=postgres
      - DB_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PWD=${POSTGRES_PASSWORD}
      - POSTGRES_SEEDS=postgres
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamic_config.yaml
    depends_on:
      postgres:
        condition: service_healthy

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - "8000:8000"
      - "2345:2345"
    env_file: .env
    volumes:
      - ./backend:/app
    command: ["air", "-c", ".air.toml"]
    depends_on:
      - postgres
      - temporal

  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    restart: always
    env_file: .env
    volumes:
      - ./backend:/app
    # Note: You will need a separate .air.worker.toml for the worker
    # command: ["air", "-c", ".air.worker.toml"]
    # For now, we keep it simple and comment it out.
    depends_on:
      - postgres
      - temporal

  ui:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - "3000:3000"
    env_file: .env
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - api

  migrations:
    image: migrate/migrate
    profiles:
      - tools
    volumes:
      - ./postgres/migrations:/migrations
    command:
      [
        "-path",
        "/migrations",
        "-database",
        "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable",
        "up",
      ]
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_dev_data:
