// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package postgres

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	CleanupExpiredRateLimits(ctx context.Context) error
	CountAuditLogs(ctx context.Context, arg CountAuditLogsParams) (int64, error)
	CountUsers(ctx context.Context) (int64, error)
	CountUsersByRole(ctx context.Context, role UserRole) (int64, error)
	CreateAuditLog(ctx context.Context, arg CreateAuditLogParams) (AuditLog, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	DeleteUser(ctx context.Context, id uuid.UUID) error
	GetAuditLogByID(ctx context.Context, id uuid.UUID) (AuditLog, error)
	GetRateLimit(ctx context.Context, key string) (RateLimit, error)
	// Copyright 2025 Andrew Vasilyev
	// SPDX-License-Identifier: APACHE-2.0
	GetUser(ctx context.Context, id uuid.UUID) (User, error)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	GetUserByKratosID(ctx context.Context, kratosIdentityID uuid.UUID) (User, error)
	ListAuditLogs(ctx context.Context, arg ListAuditLogsParams) ([]AuditLog, error)
	ListUsers(ctx context.Context, arg ListUsersParams) ([]User, error)
	ListUsersByRole(ctx context.Context, arg ListUsersByRoleParams) ([]User, error)
	ResetRateLimit(ctx context.Context, key string) error
	UpdateUser(ctx context.Context, arg UpdateUserParams) (User, error)
	UpdateUserRole(ctx context.Context, arg UpdateUserRoleParams) (User, error)
	UpsertRateLimit(ctx context.Context, arg UpsertRateLimitParams) (RateLimit, error)
	UpsertUser(ctx context.Context, arg UpsertUserParams) (User, error)
}

var _ Querier = (*Queries)(nil)
